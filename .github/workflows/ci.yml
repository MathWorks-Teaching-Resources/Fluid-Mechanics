name: MATLAB Build

# Controls when the action will run. 
on:
  push:
    branches: [ release ]
  pull_request:
    branches: [ release ]
  workflow_dispatch:

jobs:

  run-all-tests:
    strategy: 
      fail-fast: false
      matrix:
        version: [R2023a,R2023b,R2024a]
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checks-out your repository
        uses: actions/checkout@v3
      # - name: Start display server
      #   if: ${{ always() }}
      #   run: |
      #     sudo apt-get install xvfb
      #     Xvfb :99 &
      #     echo "DISPLAY=:99" >> $GITHUB_ENV
      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: ${{ matrix.version }}
          products: Simulink Simscape Symbolic_Math_Toolbox Mapping_Toolbox Simscape_Fluids
      - name: Run all the tests
        uses: matlab-actions/run-command@v2
        with:
          command: openProject(pwd); RunAllTests; 
      - name: Upload the test results as artifact
        uses: actions/upload-artifact@v3.1.3
        with:
          name: TestResults
          path: ./SoftwareTests/TestResults_*.txt

  matlab-online-basic:
    name: Run test with MATLAB Online basic
    strategy: 
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Checks-out your repository
        uses: actions/checkout@v3
      # - name: Start display server
      #   run: |
      #     sudo apt-get install xvfb
      #     Xvfb :99 &
      #     echo "DISPLAY=:99" >> $GITHUB_ENV
      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: latest
          products: Simulink Control_System_Toolbox Curve_Fitting_Toolbox Deep_Learning_Toolbox Image_Processing_Toolbox Optimization_Toolbox Signal_Processing_Toolbox Statistics_and_Machine_Learning_Toolbox Symbolic_Math_Toolbox Text_Analytics_Toolbox 
      - name: Run All Tests
        uses: matlab-actions/run-command@v2
        continue-on-error: true
        with:
          command: openProject(pwd); RunAllTests; 
          startup-options: -webui

  create-badge:
    if: ${{ always() }}
    needs: [run-all-tests]
    strategy: 
      fail-fast: false
    runs-on: ubuntu-latest
    steps: 
      - name: Checks-out your repository
        uses: actions/checkout@v3
      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: latest
      - name: Download TestResults
        uses: actions/download-artifact@v2.1.1
        with:
          name: TestResults
          path: ./SoftwareTests/
      - name: Run CreateBadge
        uses: matlab-actions/run-command@v2
        with:
          command: openProject(pwd); CreateBadge;
      - name: Commit badges
        continue-on-error: true
        run: |
          git config user.name "${{ github.workflow }} by ${{ github.actor }}"
          git config user.email "<>"
          git pull
          git add Images/Badge*.json
          git commit Images/Badge*.json -m "Update CI badges ${{  github.ref_name }}"
          git fetch
          git push
